// BTreeMap<Principal, Capsule>

type Capsule = record {
    texts: opt vec Text;
    images: opt vec Image;
};

type Text = record {
    id: nat64;
    content: text;
    metadata: opt Metadata;
};

type Image = record {
    id: nat64;
    content: blob;
    metadata: opt Metadata;
};

type Metadata = record {
    file_name: text;
    file_type: text;
    description: opt text;
    date: opt text;
    place: opt text;
    tags: opt vec text;
    visibility: opt vec principal;
	people: opt vec text;
};

type CapsuleStats = record {
    total_images: nat64;
    total_texts: nat64;
};

type Stats = record {
    capsule_number: nat64;
    image_number: nat64;
    texts_number: nat64;
};

service : {
    "greet": (text) -> (text) query;
    "store_texts": (vec Text) -> (variant { Ok : text; Err : text });
    "store_images": (vec Image) -> (variant { Ok : text; Err : text });
    "retrieve_images": (ids: opt vec nat64) -> (variant { Ok : vec Image; Err : text });
    "retrieve_capsule_stats": () -> (CapsuleStats);
};
